package com.lzf.easyfloat.example.activity

import android.app.Activity
import android.os.Bundle
import android.view.Gravity
import android.view.MotionEvent
import android.view.View
import android.widget.EditText
import android.widget.RelativeLayout
import android.widget.TextView
import androidx.core.content.ContextCompat
import com.lzf.easyfloat.EasyFloat
import com.lzf.easyfloat.anim.AppFloatDefaultAnimator
import com.lzf.easyfloat.anim.DefaultAnimator
import com.lzf.easyfloat.enums.ShowPattern
import com.lzf.easyfloat.enums.SidePattern
import com.lzf.easyfloat.example.R
import com.lzf.easyfloat.example.startActivity
import com.lzf.easyfloat.interfaces.OnDisplayHeight
import com.lzf.easyfloat.interfaces.OnFloatCallbacks
import com.lzf.easyfloat.interfaces.OnInvokeView
import com.lzf.easyfloat.utils.DisplayUtils
import com.lzf.easyfloat.utils.InputMethodUtils
import kotlinx.android.synthetic.main.activity_third.*

/**
 * @author: liuzhenfeng
 * @function: ÊµãËØïEditText
 * @date: 2019-07-26  13:13
 */
class ThirdActivity : Activity() {

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_third)

        openEditTextFloat.setOnClickListener { showEditTextFloat() }

        openJavaTestActivity.setOnClickListener { startActivity<JavaTestActivity>(this) }

        changeBackground.setOnClickListener {
            EasyFloat.getAppFloatView()?.apply {
                findViewById<RelativeLayout>(R.id.rlContent)
                    .setBackgroundColor(ContextCompat.getColor(this@ThirdActivity, R.color.violet))

                // ...ÂÖ∂‰ªñViewÊìç‰Ωú
            }
        }

        recoverBackground.setOnClickListener {
            EasyFloat.getAppFloatView()?.findViewById<RelativeLayout>(R.id.rlContent)
                ?.setBackgroundColor(ContextCompat.getColor(this, R.color.translucent))
        }
    }

    private fun showEditTextFloat(tag: String? = "editTextFloat") {
        EasyFloat.with(this)
            .setShowPattern(ShowPattern.ALL_TIME)
            .setGravity(Gravity.CENTER, 0, -300)
            .setTag(tag)
            .hasEditText(true)
            .setLayout(R.layout.float_edit, OnInvokeView {
                it.findViewById<EditText>(R.id.editText).apply {
                    // ÁÇπÂáªÊâìÂºÄËΩØÈîÆÁõò
                    setOnClickListener { InputMethodUtils.openInputMethod(this as EditText, tag) }
                    // È¶ñÊ¨°ÁÇπÂáªÔºå‰∏ç‰ºöÂõûË∞ÉonClick‰∫ã‰ª∂Ôºå‰ΩÜÊòØ‰ºöÊîπÂèòÁÑ¶ÁÇπ
                    setOnFocusChangeListener { _, hasFocus ->
                        if (hasFocus) InputMethodUtils.openInputMethod(this as EditText, tag)
                    }
                }

                it.findViewById<TextView>(R.id.tvCloseFloat).setOnClickListener {
                    EasyFloat.dismissAppFloat(tag)
                }
            })
            .show()
    }

    private fun showFloat() {

        EasyFloat.with(this).setLayout(R.layout.float_app).show()

        EasyFloat.with(this)
            // ËÆæÁΩÆÊµÆÁ™óxmlÂ∏ÉÂ±ÄÊñá‰ª∂ÔºåÂπ∂ÂèØËÆæÁΩÆËØ¶ÁªÜ‰ø°ÊÅØ
            .setLayout(R.layout.float_app, OnInvokeView { })
            // ËÆæÁΩÆÊàë‰ª¨‰º†ÂÖ•xmlÂ∏ÉÂ±ÄÁöÑËØ¶ÁªÜ‰ø°ÊÅØ
            .invokeView(OnInvokeView { })
            // ËÆæÁΩÆÊµÆÁ™óÊòæÁ§∫Á±ªÂûãÔºåÈªòËÆ§Âè™Âú®ÂΩìÂâçActivityÊòæÁ§∫ÔºåÂèØÈÄâ‰∏ÄÁõ¥ÊòæÁ§∫„ÄÅ‰ªÖÂâçÂè∞ÊòæÁ§∫
            .setShowPattern(ShowPattern.ALL_TIME)
            // ËÆæÁΩÆÂê∏ÈôÑÊñπÂºèÔºåÂÖ±15ÁßçÊ®°ÂºèÔºåËØ¶ÊÉÖÂèÇËÄÉSidePattern
            .setSidePattern(SidePattern.RESULT_HORIZONTAL)
            // ËÆæÁΩÆÊµÆÁ™óÁöÑÊ†áÁ≠æÔºåÁî®‰∫éÂå∫ÂàÜÂ§ö‰∏™ÊµÆÁ™ó
            .setTag("testFloat")
            // ËÆæÁΩÆÊµÆÁ™óÊòØÂê¶ÂèØÊãñÊãΩ
            .setDragEnable(true)
            // Á≥ªÁªüÊµÆÁ™óÊòØÂê¶ÂåÖÂê´EditTextÔºå‰ªÖÈíàÂØπÁ≥ªÁªüÊµÆÁ™óÔºåÈªòËÆ§‰∏çÂåÖÂê´
            .hasEditText(false)
            // ËÆæÁΩÆÊµÆÁ™óÂõ∫ÂÆöÂùêÊ†áÔºåpsÔºöËÆæÁΩÆÂõ∫ÂÆöÂùêÊ†áÔºåGravityÂ±ûÊÄßÂíåoffsetÂ±ûÊÄßÂ∞ÜÊó†Êïà
            .setLocation(100, 200)
            // ËÆæÁΩÆÊµÆÁ™óÁöÑÂØπÈΩêÊñπÂºèÂíåÂùêÊ†áÂÅèÁßªÈáè
            .setGravity(Gravity.END or Gravity.CENTER_VERTICAL, 0, 200)
            // ËÆæÁΩÆÂÆΩÈ´òÊòØÂê¶ÂÖÖÊª°Áà∂Â∏ÉÂ±ÄÔºåÁõ¥Êé•Âú®xmlËÆæÁΩÆmatch_parentÂ±ûÊÄßÊó†Êïà
            .setMatchParent(widthMatch = false, heightMatch = false)
            // ËÆæÁΩÆActivityÊµÆÁ™óÁöÑÂá∫ÂÖ•Âä®ÁîªÔºåÂèØËá™ÂÆö‰πâÔºåÂÆûÁé∞Áõ∏Â∫îÊé•Âè£Âç≥ÂèØÔºàÁ≠ñÁï•Ê®°ÂºèÔºâÔºåÊó†ÈúÄÂä®ÁîªÁõ¥Êé•ËÆæÁΩÆ‰∏∫null
            .setAnimator(DefaultAnimator())
            // ËÆæÁΩÆÁ≥ªÁªüÊµÆÁ™óÁöÑÂá∫ÂÖ•Âä®ÁîªÔºå‰ΩøÁî®Âêå‰∏ä
            .setAppFloatAnimator(AppFloatDefaultAnimator())
            // ËÆæÁΩÆÁ≥ªÁªüÊµÆÁ™óÁöÑ‰∏çÈúÄË¶ÅÊòæÁ§∫ÁöÑÈ°µÈù¢
            .setFilter(MainActivity::class.java, SecondActivity::class.java)
            // ËÆæÁΩÆÁ≥ªÁªüÊµÆÁ™óÁöÑÊúâÊïàÊòæÁ§∫È´òÂ∫¶Ôºà‰∏çÂåÖÂê´ËôöÊãüÂØºËà™Ê†èÁöÑÈ´òÂ∫¶ÔºâÔºåÂü∫Êú¨Áî®‰∏çÂà∞ÔºåÈô§ÈùûÊúâËôöÊãüÂØºËà™Ê†èÈÄÇÈÖçÈóÆÈ¢ò
            .setDisplayHeight(OnDisplayHeight { context -> DisplayUtils.rejectedNavHeight(context) })
            // ÊµÆÁ™óÁöÑ‰∏Ä‰∫õÁä∂ÊÄÅÂõûË∞ÉÔºåÂ¶ÇÔºöÂàõÂª∫ÁªìÊûú„ÄÅÊòæÁ§∫„ÄÅÈöêËóè„ÄÅÈîÄÊØÅ„ÄÅtouchEvent„ÄÅÊãñÊãΩËøáÁ®ã„ÄÅÊãñÊãΩÁªìÊùü„ÄÇ
            // psÔºöÈÄöËøáKotlin DSLÂÆûÁé∞ÁöÑÂõûË∞ÉÔºåÂèØ‰ª•ÊåâÈúÄÂ§çÂÜôÊñπÊ≥ïÔºåÁî®Âà∞Âì™‰∏™ÂÜôÂì™‰∏™
            .registerCallback {
                createResult { isCreated, msg, view -> }
                show { }
                hide { }
                dismiss { }
                touchEvent { view, motionEvent -> }
                drag { view, motionEvent -> }
                dragEnd { }
            }
            .registerCallbacks(object : OnFloatCallbacks {
                override fun createdResult(isCreated: Boolean, msg: String?, view: View?) {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

                override fun show(view: View) {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

                override fun hide(view: View) {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

                override fun dismiss() {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

                override fun touchEvent(view: View, event: MotionEvent) {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

                override fun drag(view: View, event: MotionEvent) {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

                override fun dragEnd(view: View) {
                    TODO("not implemented") //To change body of created functions use File | Settings | File Templates.
                }

            })
            // ÂàõÂª∫ÊµÆÁ™óÔºàËøôÊòØÂÖ≥ÈîÆÂì¶üòÇÔºâ
            .show()
    }

}

